C51 COMPILER V9.56.0.0   CODE                                                              06/06/2017 16:24:55 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN .\Objects\code.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\code
                    -.lst) TABS(2) OBJECT(.\Objects\code.obj)

line level    source

   1          /*  Name     : code.c
   2           *  Purpose  : Main file for generating pwm using 8051.
   3           *  Author   : M.Saeed Yasin
   4           *  Date     : 13-06-12
   5           *  Revision : None
   6           */
   7          #include<reg51.h>
   8          #include "lcd16x2.h"
   9          #include "pwm.h"
  10          #include "timer.h"
  11          #include "teclado_matricial_4x4.h"
  12          
  13          static void DECODIFICA_FUNCAO(void);
  14          static void PARAR_MOTORES(void);
  15          static void MOTOR_AUMENTAR_VELOCIDADE(unsigned char motor, unsigned char valor);
  16          static void MOTOR_DIMINUIR_VELOCIDADE(unsigned char motor, unsigned char valor);
  17          static void MOTOR_1_INVERTE_SENTIDO(void);
  18          static void MOTOR_2_INVERTE_SENTIDO(void);
  19          
  20          static void MOTORES_PONTE_H_INICIAL(
  21            unsigned char pwm_1_in1,
  22            unsigned char pwm_1_in2,
  23            unsigned char pwm_2_in3,
  24            unsigned char pwm_2_in4
  25          );
  26          
  27          // Main Function
  28          int main(void)
  29          { 
  30   1        INIDISP();
  31   1        
  32   1        ESC_STR1("Leonardo Pereira", 16);
  33   1        ESC_STR2("  Rodrigo Endo  ", 16);
  34   1        
  35   1        Delay(5000);
  36   1        
  37   1        ESC_STR1("F1/F2: Muda Vel.", 16);
  38   1        ESC_STR2("ENTER: Init/Para", 16);
  39   1        
  40   1        Delay(5000);
  41   1        
  42   1        cct_init();            // Make all ports zero
  43   1      
  44   1        MOTORES_PONTE_H_INICIAL(0, 1, 0, 1);
  45   1        
  46   1        InitPWM();              // Start PWM
  47   1      
  48   1        PWM_1 = 1;              // Make 50% duty cycle of PWM
  49   1        PWM_2 = 1;              // Make 50% duty cycle of PWM
  50   1        
  51   1        while(1)
  52   1        {
  53   2          ESC_STR1("Vel. PWM 1: ", 12);
  54   2          ESC_DADO_NUMERO_COMPLETO(PWM_1, 3);
C51 COMPILER V9.56.0.0   CODE                                                              06/06/2017 16:24:55 PAGE 2   

  55   2          ESCDADO(' ');
  56   2          
  57   2          ESC_STR2("Vel. PWM 2: ", 12);
  58   2          ESC_DADO_NUMERO_COMPLETO(PWM_2, 3);
  59   2          ESCDADO(' ');
  60   2          
  61   2          Delay(350);
  62   2          
  63   2          VARREDURA_TECLADO();
  64   2          
  65   2          DECODIFICA_FUNCAO();
  66   2        }
  67   1        
  68   1        return;
  69   1      }
  70          
  71          static void DECODIFICA_FUNCAO()
  72          {
  73   1        switch(COMANDO_TECLADO)
  74   1        {
  75   2          case COMANDO_0: // para motores
  76   2            PARAR_MOTORES();
  77   2          
  78   2            PWM_1_SENTIDO = SENTIDO_FRENTE;
  79   2          
  80   2            PWM_2_SENTIDO = SENTIDO_FRENTE;
  81   2          
  82   2            break;
  83   2          
  84   2          case COMANDO_1:
  85   2            MOTOR_AUMENTAR_VELOCIDADE(1, 5);
  86   2          
  87   2            break;
  88   2          
  89   2          case COMANDO_2:
  90   2            break;
  91   2          
  92   2          case COMANDO_3:
  93   2            MOTOR_AUMENTAR_VELOCIDADE(2, 5);
  94   2          
  95   2            break;
  96   2          
  97   2          case COMANDO_4:
  98   2            MOTOR_AUMENTAR_VELOCIDADE(1, 5);
  99   2          
 100   2            MOTOR_AUMENTAR_VELOCIDADE(2, 10);
 101   2          
 102   2            break;
 103   2          
 104   2          case COMANDO_5:
 105   2            break;
 106   2          
 107   2          case COMANDO_6:
 108   2            MOTOR_AUMENTAR_VELOCIDADE(2, 5);
 109   2          
 110   2            MOTOR_AUMENTAR_VELOCIDADE(1, 10);
 111   2          
 112   2            break;
 113   2          
 114   2          case COMANDO_7:
 115   2            MOTOR_DIMINUIR_VELOCIDADE(1, 5);
 116   2          
C51 COMPILER V9.56.0.0   CODE                                                              06/06/2017 16:24:55 PAGE 3   

 117   2            break;
 118   2          
 119   2          case COMANDO_8:
 120   2            break;
 121   2          
 122   2          case COMANDO_9:
 123   2            MOTOR_DIMINUIR_VELOCIDADE(2, 5);
 124   2          
 125   2            break;
 126   2          
 127   2          case COMANDO_F1: // aumenta velocidade linear
 128   2            if((PWM_1_SENTIDO == SENTIDO_FRENTE) && (PWM_2_SENTIDO == SENTIDO_FRENTE))
 129   2              MOTORES_PONTE_H_INICIAL(1, 0, 1, 0);
 130   2            
 131   2            else if((PWM_1_SENTIDO == SENTIDO_TRAS) && (PWM_2_SENTIDO == SENTIDO_TRAS))
 132   2              MOTORES_PONTE_H_INICIAL(0, 1, 0, 1);
 133   2            
 134   2            else if((PWM_1_SENTIDO == SENTIDO_TRAS) && (PWM_2_SENTIDO == SENTIDO_FRENTE))
 135   2              MOTORES_PONTE_H_INICIAL(0, 1, 1, 0);
 136   2            
 137   2            else
 138   2              MOTORES_PONTE_H_INICIAL(1, 0, 0, 1);
 139   2          
 140   2            MOTOR_AUMENTAR_VELOCIDADE(1, 5);
 141   2            
 142   2            MOTOR_AUMENTAR_VELOCIDADE(2, 5);
 143   2          
 144   2            break;
 145   2          
 146   2          case COMANDO_F2: // diminui velocidade linear
 147   2            if((PWM_1_SENTIDO == SENTIDO_FRENTE) && (PWM_2_SENTIDO == SENTIDO_FRENTE))
 148   2              MOTORES_PONTE_H_INICIAL(1, 0, 1, 0);
 149   2            
 150   2            else if((PWM_1_SENTIDO == SENTIDO_TRAS) && (PWM_2_SENTIDO == SENTIDO_TRAS))
 151   2              MOTORES_PONTE_H_INICIAL(0, 1, 0, 1);
 152   2            
 153   2            else if((PWM_1_SENTIDO == SENTIDO_TRAS) && (PWM_2_SENTIDO == SENTIDO_FRENTE))
 154   2              MOTORES_PONTE_H_INICIAL(0, 1, 1, 0);
 155   2            
 156   2            else
 157   2              MOTORES_PONTE_H_INICIAL(1, 0, 0, 1);
 158   2            
 159   2            MOTOR_DIMINUIR_VELOCIDADE(1, 5);
 160   2            
 161   2            MOTOR_DIMINUIR_VELOCIDADE(2, 5);
 162   2            
 163   2            break;
 164   2            
 165   2          case COMANDO_F3: // para motores e inverte sentidos
 166   2            PARAR_MOTORES();
 167   2          
 168   2            MOTOR_1_INVERTE_SENTIDO();
 169   2          
 170   2            MOTOR_2_INVERTE_SENTIDO();
 171   2          
 172   2            break;
 173   2          
 174   2          case COMANDO_ENT:
 175   2            PARAR_MOTORES();
 176   2          
 177   2            PWM_1_SENTIDO = SENTIDO_TRAS;
 178   2          
C51 COMPILER V9.56.0.0   CODE                                                              06/06/2017 16:24:55 PAGE 4   

 179   2            PWM_2_SENTIDO = SENTIDO_FRENTE;
 180   2          
 181   2            break;
 182   2          
 183   2          case COMANDO_CLR:
 184   2            PARAR_MOTORES();
 185   2          
 186   2            PWM_1_SENTIDO = SENTIDO_FRENTE;
 187   2          
 188   2            PWM_2_SENTIDO = SENTIDO_TRAS;
 189   2          
 190   2            break;
 191   2          
 192   2          default:
 193   2            break;
 194   2        }
 195   1        
 196   1        return;
 197   1      }
 198          
 199          static void PARAR_MOTORES(void)
 200          {
 201   1        while((PWM_1 > 1) || (PWM_2 > 1))
 202   1        {
 203   2          MOTOR_DIMINUIR_VELOCIDADE(1, 5);
 204   2            
 205   2          MOTOR_DIMINUIR_VELOCIDADE(2, 5);
 206   2          
 207   2          Delay(200);
 208   2        }
 209   1        
 210   1        return;
 211   1      }
 212          
 213          static void MOTOR_AUMENTAR_VELOCIDADE(unsigned char motor, unsigned char valor)
 214          {
 215   1        if (motor == 1)
 216   1        {
 217   2          if(PWM_1 > (255 - valor))
 218   2              PWM_1 = 255;
 219   2          
 220   2          else
 221   2            PWM_1 += valor;
 222   2        }
 223   1        
 224   1        else if(motor == 2)
 225   1        {
 226   2          if(PWM_2 > (255 - valor))
 227   2              PWM_2 = 255;
 228   2          
 229   2          else
 230   2            PWM_2 += valor;
 231   2        }
 232   1        
 233   1        return;
 234   1      }
 235          
 236          static void MOTOR_DIMINUIR_VELOCIDADE(unsigned char motor, unsigned char valor)
 237          {
 238   1        if (motor == 1)
 239   1        {
 240   2          if(PWM_1 < valor)
C51 COMPILER V9.56.0.0   CODE                                                              06/06/2017 16:24:55 PAGE 5   

 241   2              PWM_1 = 1;
 242   2            
 243   2          else
 244   2            PWM_1 -= valor;
 245   2        }
 246   1          
 247   1        
 248   1        else if(motor == 2)
 249   1        {
 250   2          if(PWM_2 < valor)
 251   2              PWM_2 = 1;
 252   2            
 253   2          else
 254   2            PWM_2 -= valor;
 255   2        }
 256   1        
 257   1        return;
 258   1      }
 259          
 260          static void MOTORES_PONTE_H_INICIAL(unsigned char pwm_1_in1, unsigned char pwm_1_in2, unsigned char pwm_2_
             -in3, unsigned char pwm_2_in4)
 261          {
 262   1        PWM_1_in1 = pwm_1_in1;
 263   1        PWM_1_in2 = pwm_1_in2;
 264   1        
 265   1        PWM_2_in3 = pwm_2_in3;
 266   1        PWM_2_in4 = pwm_2_in4;
 267   1        return;
 268   1      }
 269          
 270          static void MOTOR_1_INVERTE_SENTIDO(void)
 271          {
 272   1        PWM_1_in1 ^= 1;
 273   1        PWM_1_in2 ^= 1;
 274   1        
 275   1        PWM_1_SENTIDO ^= 1; 
 276   1        
 277   1        return;
 278   1      }
 279          
 280          static void MOTOR_2_INVERTE_SENTIDO(void)
 281          {
 282   1        PWM_2_in3 ^= 1;
 283   1        PWM_2_in4 ^= 1;
 284   1        
 285   1        PWM_2_SENTIDO ^= 1;
 286   1        
 287   1        return;
 288   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    612    ----
   CONSTANT SIZE    =     94    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
